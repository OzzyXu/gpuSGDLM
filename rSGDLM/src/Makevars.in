DEFINES = -DUSE_RCPP -DMAX_NO_GPUS=32 -DDOUBLETYPE=double -DLOGGER_LOG_LEVEL_ACTIVE=100 -DTHREADS_PER_BLOCK=512 -DOPTIM_PRECISION=0.000001 -DOPTIM_MAX_ITER=50 -DGAMMA_LOOPS=2

# C++ compiler flags 
PKG_CPPFLAGS= $(DEFINES) -I.

# NVCC compiler flags
NVCC = nvcc
NVCC_INC = -I@CUDA_INC_PATH@
NVCC_FLAGS = -Xcompiler -fPIC -c $(PKG_CPPFLAGS) $(NVCC_INC) -gencode arch=compute_30,code=sm_30 -gencode arch=compute_32,code=sm_32 -gencode arch=compute_35,code=sm_35 -gencode arch=compute_50,code=sm_50 -gencode arch=compute_52,code=sm_52 -gencode arch=compute_53,code=sm_53 -gencode arch=compute_60,code=sm_60 -gencode arch=compute_61,code=sm_61 -gencode arch=compute_62,code=sm_62 -gencode arch=compute_70,code=sm_70 -gencode arch=compute_72,code=sm_72 -gencode arch=compute_75,code=sm_75

# Linker flags to external shared objects libraries
PKG_LIBS = -L@CUDA_LIB_PATH@ -lcudart -lcublas -lcurand

### Define objects
cu_sources := $(wildcard *.cu SGDLM/*.cu)
cu_sharedlibs := $(patsubst %.cu, %.o, $(cu_sources))

cpp_sources := $(wildcard *.cpp SGDLM/*.cpp)
cpp_sharedlibs := $(patsubst %.cpp, %.o, $(cpp_sources))

OBJECTS = $(cpp_sharedlibs) $(cu_sharedlibs)

%.o: %.cpp $(cpp_sources)
	$(CXX) -fPIC -c $(ALL_CPPFLAGS) $(ALL_CXXFLAGS) $< -o $@

%.o: %.cu $(cu_sources)
	$(NVCC) $(NVCC_FLAGS) $< -o $@
